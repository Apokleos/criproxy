#!/bin/bash
# see: dh_installdeb(1)

# Source debconf library before applying stricter bash options
. /usr/share/debconf/confmodule

set -o errexit
set -o nounset

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

function make_dockershim_service {
    kubelet_service_file=/lib/systemd/system/kubelet.service
    if [[ ! -f ${kubelet_service_file} ]]; then
        kubelet_service_file=/etc/systemd/system/kubelet.service
        if [[ ! -f ${kubelet_service_file} ]]; then
            echo "can't find kubelet.service" >&2
            exit 1
        fi
    fi
    cp -r "${kubelet_service_file}" /etc/systemd/system/dockershim.service
    # only copy the dir if it's non-empty
    if [[ -d /etc/systemd/system/kubelet.service.d && $(ls -A "/etc/systemd/system/kubelet.service.d") ]]; then
        cp -r /etc/systemd/system/kubelet.service.d /etc/systemd/system/dockershim.service.d
        rm -f /etc/systemd/system/dockershim.service.d/99-criproxy.conf
        if [[ $(ls -A "/etc/systemd/system/dockershim.service.d") ]]; then
            sed -i '/EnvironmentFile=/d;s@\(ExecStart.*kubelet\)@\1 --experimental-dockershim --port 11250@' /etc/systemd/system/dockershim.service.d/*
        fi
    fi
    sed -i '/EnvironmentFile=/d;s@\(ExecStart.*kubelet\)@\1 --experimental-dockershim --port 11250@' /etc/systemd/system/dockershim.service
}

use_dockershim=1
db_get criproxy/primary_cri
if [[ ${RET} = containerd ]]; then
    use_dockershim=
fi

case "$1" in
    configure)
        setup_default=
        if [[ ! -e /etc/default/criproxy ]]; then
            setup_default=1
        fi
        if [[ ${use_dockershim} ]]; then
            make_dockershim_service
            echo "CRI_PRIMARY=/var/run/dockershim.sock" >/etc/default/criproxy
            systemctl enable criproxy
        elif [[ ${setup_default} ]]; then
            echo "CRI_PRIMARY=/var/run/containerd/containerd.sock" >/etc/default/criproxy
        fi
        if [[ ${setup_default} ]]; then
            echo "CRI_OTHER=virtlet.cloud:/run/virtlet.sock" >>/etc/default/criproxy
        fi
        systemctl stop kubelet
        systemctl daemon-reload
        systemctl enable criproxy
        systemctl start kubelet
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
